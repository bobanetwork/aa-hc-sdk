SHELL := /bin/bash

pkg := bindings
monorepo-base := $(shell dirname $(realpath .))
contracts-dir := $(monorepo-base)/packages/contracts-bedrock

all: version mkdir bindings

version:
	forge --version

compile:
	cd $(contracts-dir) && \
		pnpm build

bindings: compile bindings-build

bindings-build: bindgen-generate-local

bindgen: compile bindgen-generate-all

bindgen-generate-all:
	go run ./cmd/ \
		generate \
		--monorepo-base $(monorepo-base) \
		--metadata-out ./$(pkg) \
		--bindings-package $(pkg) \
		--contracts-list ./artifacts.json \
		all \
		--forge-artifacts $(contracts-dir)/forge-artifacts \
		--source-maps-list MIPS,PreimageOracle \
		--etherscan.apikey.eth $(ETHERSCAN_APIKEY_ETH) \
		--etherscan.apikey.op $(ETHERSCAN_APIKEY_OP) \
		--rpc.url.eth $(RPC_URL_ETH) \
		--rpc.url.op $(RPC_URL_OP)

bindgen-local: compile bindgen-generate-local

bindgen-generate-local:
	go run ./cmd/ \
		generate \
		--monorepo-base $(monorepo-base) \
		--metadata-out ./$(pkg) \
		--bindings-package $(pkg) \
		--contracts-list ./artifacts.json \
		local \
		--forge-artifacts $(contracts-dir)/forge-artifacts \
		--source-maps-list MIPS,PreimageOracle

bindgen-remote:
	go run ./cmd/ \
		generate \
		--monorepo-base $(monorepo-base) \
		--metadata-out ./$(pkg) \
		--bindings-package $(pkg) \
		--contracts-list ./artifacts.json \
		remote \
		--etherscan.apikey.eth $(ETHERSCAN_APIKEY_ETH) \
		--etherscan.apikey.op $(ETHERSCAN_APIKEY_OP) \
		--rpc.url.eth $(RPC_URL_ETH) \
		--rpc.url.op $(RPC_URL_OP)

mkdir:
	mkdir -p $(pkg)

clean-contracts:
	cd $(contracts-dir) && \
		pnpm clean

lint:
	golangci-lint run -E goimports,sqlclosecheck,bodyclose,asciicheck,misspell,errorlint --timeout 5m -e "errors.As" -e "errors.Is" ./...

# Everything in bindings/ is autogenerated except for one file
clean:
	find $(pkg) -type f -not -name "registry.go" | xargs rm -f

test:
	go test ./...
